# -*- coding: utf-8 -*-
"""


Следующая повторяющаяся последовательность определена для множества натуральных чисел:

n → n/2 (n - чётное)
n → 3n + 1 (n - нечётное)

Используя описанное выше правило и начиная с 13, сгенерируется следующая последовательность:
13 → 40 → 20 → 10 → 5 → 16 → 8 → 4 → 2 → 1

Получившаяся последовательность (начиная с 13 и заканчивая 1) содержит 10 элементов. Хотя это до сих пор и не доказано (проблема Коллатца (Collatz)), предполагается, что все сгенерированные таким образом последовательности оканчиваются 1.

Какой начальный элемент меньше миллиона генерирует самую длинную последовательность?

Примечание: После начала последовательности элементы могут быть больше миллиона.

"""
def is_even(n):
    if n % 2 == 0:
        return True
    else:
       return False


def generate(n):
    if n == 0:
        yield 1
    lst = []
    lst.append(n)
    while n != 1:
        if is_even(n) == True:
            n = int(n/2)
        else:
            n = 3*n + 1
        lst.append(n)
    yield len(lst)

remember = 0
start = 0
maxnum = next(generate(start))
for i in range(start,1000000):
    if maxnum < next(generate(i)):
        maxnum = next(generate(i))
        remember = i
        #print(maxnum)
    
print(remember, ' ---> ', maxnum)
